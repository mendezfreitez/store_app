{"remainingRequest":"C:\\Users\\icald\\VueJS\\store_app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\icald\\VueJS\\store_app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\icald\\VueJS\\store_app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icald\\VueJS\\store_app\\src\\components\\personalizaTuCamiseta.vue?vue&type=template&id=670459aa&","dependencies":[{"path":"C:\\Users\\icald\\VueJS\\store_app\\src\\components\\personalizaTuCamiseta.vue","mtime":1611936238605},{"path":"C:\\Users\\icald\\VueJS\\store_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icald\\VueJS\\store_app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\icald\\VueJS\\store_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icald\\VueJS\\store_app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}